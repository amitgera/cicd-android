# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/workspace/ci/
  docker:
    - image: circleci/android:api-28-alpha

small_environment: &small_environment
  resource_class: small
#git checkout -b b4 origin/develop
#commit:2
jobs:

  build-code:
    <<: *defaults
    #working_directory: ~/workspace/ci/
    docker:
      - image: circleci/android:api-28-alpha
    environment:
        JVM_OPTS: -Xmx3200m
    steps:
      # Checkout codebase
      - checkout

  branch-check:
    <<: *defaults
    <<: *small_environment
    steps:
        - run:
           name: Check whether PR checks should run or not.(PR Checks will run only for PR's which are raised to Master , develop or release branches.)
           command: |
                sudo pip install requests
                python << END
                import requests
                import os
                import sys
                import json
                import time
                if os.environ.get('CIRCLE_PULL_REQUEST') is not None:
                    pullreq = os.environ["CIRCLE_PULL_REQUEST"]
                else:
                    cibuildnum = os.environ["CIRCLE_BUILD_NUM"]
                    circlecitoken = os.environ["circlecitoken"]
                    r = requests.get('https://circleci.com/api/v1.1/project/github/amitgera/cicd-android/'+cibuildnum+'?circle-token='+circlecitoken)
                    pullreq = r.json()["pull_requests"][0]["url"]
                token = os.environ["pythontoken"]
                pullid =(filter(str.isdigit, pullreq))
                headers={'Authorization': token}
                base_branch_name = "not_this_branch"
                counter = 0
                while True:
                    counter += 1
                    try:
                        r = requests.get('https://api.github.com/repos/amitgera/cicd-android/pulls/'+pullid,headers=headers)
                    except:
                        print r.status_code
                    if r.status_code != 200 and counter<=5:
                        time.sleep(30)
                        continue
                    if r.status_code ==200:
                        base_branch_name=r.json()['base']['ref']
                    if base_branch_name!="not_this_branch" or counter>=5:
                        break
                print "The base branch name is : "+base_branch_name
                if base_branch_name.startswith("release_"):
                    print "Release branch build"
                    r=requests.post('https://api.github.com/repos/amitgera/cicd-android/issues/'+pullid+'/labels',headers=headers, data = '["'+base_branch_name+'"]')
                    print r.json()
                    sys.exit(0)
                elif base_branch_name.startswith("develop"):
                    print "develop branch build"
                    sys.exit(0)
                elif base_branch_name.startswith("master"):
                    print "master branch build"
                    sys.exit(0)
                else:
                    print "Not a Release or develop or master PR"
                    jsonItem = json.dumps('<!-- 1 error: Test error--> <table> <thead> <tr> <th width="50"></th> <th width="100%" data-danger-table="true" data-kind="Error"> 1 Message </th></tr></thead><tbody><tr><td>:speech_balloon:</td><td data-sticky="false"> This PR does not require PR checks to be run as it is not raised to release/dev/master branch.  </td></tr></tbody></table><p align="right" data-meta="generated_by_danger">Generated by :boom: <a href="http://https://circleci.com/gh/amitgera/cicd-android/">cicd-android</a></p>')
                    r=requests.post('https://api.github.com/repos/amitgera/cicd-android/issues/'+pullid+'/comments',headers=headers, data = '{"body": '+jsonItem +'}')
                    sys.exit(-1)
                END
workflows:
  version: 2
  code-build:
    jobs:
      - branch-check
      - build-code:
          requires:
            - branch-check
#          filters:
#            branches:
#              only:
#                - master
#                - develop
                #- /^release-.*/
                #- /.*develop.*/
                #- /.*master.*/
                #- /.*hotfix.*/
