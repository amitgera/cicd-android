# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/workspace/ci/
  docker:
    - image: circleci/android:api-28-alpha

small_environment: &small_environment
  resource_class: small
#git checkout -b b4 origin/develop
#commit:2
jobs:

  build-code:
    <<: *defaults
    #working_directory: ~/workspace/ci/
    docker:
      - image: circleci/android:api-28-alpha
    environment:
        JVM_OPTS: -Xmx3200m
    steps:
      # Checkout codebase
      - checkout

  branch-check:
    <<: *defaults
    <<: *small_environment
    steps:
      - run:
          name: Check whether PR checks should run or not.(PR Checks will run only for PR's which are raised to Master , develop or release branches.)
          command: |
                sudo pip install requests
                python << END
                import requests
                import os
                import sys
                import json
                import time
                if os.environ.get('CIRCLE_PULL_REQUEST') is None:
                    print "Not a Pull Request"
                    sys.exit(-1)
                pullreq = os.environ["CIRCLE_PULL_REQUEST"]
                token = os.environ["pythontoken"]
                pullid =(filter(str.isdigit, pullreq))
                headers={'Authorization': token}
                base_branch_name = "not_this_branch"
                counter = 0
                while True:
                    counter += 1
                    try:
                        r = requests.get('https://api.github.com/repos/amitgera/cicd-android/pulls/'+pullid,headers=headers)
                        print r
                    except:
                        print r.status_code
                    if r.status_code != 200 and counter<=5:
                        time.sleep(30)
                        continue
                    if r.status_code ==200:
                        base_branch_name=r.json()['base']['ref']
                        break
                    if base_branch_name!="not_this_branch" or counter>=5:
                        break
                print "The base branch name is : "+base_branch_name
                if base_branch_name.startswith("release_"):
                    print "building branch : " + os.environ["CIRCLE_BRANCH"] + " against branch : "+base_branch_name
                    sys.exit(0)
                elif base_branch_name == "develop" :
                    print "building branch : " + os.environ["CIRCLE_BRANCH"] + " against branch : "+base_branch_name
                    sys.exit(0)
                elif base_branch_name == "master" :
                    print "building branch : " + os.environ["CIRCLE_BRANCH"] + " against branch : "+base_branch_name
                    sys.exit(0)
                else:
                    print "This PR[" + pullreq + "] is not against base branch : release/develop/master"
                    sys.exit(-1)
                END
  comment-check:
    <<: *defaults
    <<: *small_environment
    steps:
      - run:
          name: conditionally run a job
          command: |
                # replace this with your build/deploy check (i.e. current branch is "release")
                if [[ true ]]; then
                curl --user ${CIRCLE_API_USER_TOKEN} \
                     --data build_parameters[CIRCLE_JOB]=build-code \
                     --data revision=$CIRCLE_SHA1 \
                     https://circleci.com/api/v1.1/project/github/amitgera/cicd-android/tree/$CIRCLE_BRANCH
                fi
                END
#git checkout -b ag-b2 origin/develop : 20
workflows:
  version: 2
  code-build:
    jobs:
      - branch-check
      - build-code:
          requires:
            - branch-check